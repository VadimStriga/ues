# Generated by Django 4.2.11 on 2024-08-30 07:44

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('electricity_accounting', '0007_remove_tariff_rural_population_tariff_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='electricitymeteringpoint',
            name='constant_losses',
            field=models.PositiveIntegerField(default=0, verbose_name='Постоянныен потери трансформатора, кВтч/месяц'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='electricitymeteringpoint',
            name='losses',
            field=models.PositiveIntegerField(default=10, verbose_name='Процент потерь на линиях'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='electricitymeteringpoint',
            name='margin',
            field=models.FloatField(default=0, help_text='Добавочная стоимость, руб./кВтч', verbose_name='Наценка'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='electricitymeteringpoint',
            name='tariff',
            field=models.CharField(choices=[('urban_tariff', 'Тариф для городского населения с однотирфным прибором учета'), ('rural_tariff', 'Тариф для сельского населения с однотирфным прибором учета'), ('low_voltage_tariff', 'Тариф для потребителей с уровнем напряжения НН, рассчитывающихся по I ценовой категории'), ('medium_voltage_tariff_1', 'Тариф для потребителей с уровнем напряжения СН-I, рассчитывающихся по I ценовой категории'), ('medium_voltage_tariff_2', 'Тариф для потребителей с уровнем напряжения СН-II, рассчитывающихся по I ценовой категории'), ('high_voltage_tariff', 'Тариф для потребителей с уровнем напряжения ВН, рассчитывающихся по I ценовой категории'), ('tariff-free', 'Бездоговорное потребление')], default='tariff-free', max_length=200, verbose_name='Тариф'),
        ),
        migrations.AddField(
            model_name='electricitymeteringpoint',
            name='transformation_coefficient',
            field=models.PositiveIntegerField(default=1, help_text='Отношение напряжений на зажимах двух обмоток в режиме холостого\n                     хода, принимается равным отношению чисел их витков.', verbose_name='Коэффициент транформации'),
            preserve_default=False,
        ),
        migrations.CreateModel(
            name='Indications',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entry_date', models.DateField(verbose_name='Дата снятия показаний')),
                ('readings', models.FloatField(verbose_name='Показания счётчика электрической энергии')),
                ('point', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='electricity_accounting.electricitymeteringpoint')),
            ],
        ),
    ]
